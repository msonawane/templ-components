package components

type AlertOptions struct {
	Icon        templ.Component
	Title       string
	Text        string
	Classes     string
	Success     bool
	Info        bool
	Warning     bool
	Danger      bool
	Dismissible bool
}

var (
	DangerAlertOpts = AlertOptions{
		Icon:        AlertTriangleSVG(),
		Title:       "Alert Title",
		Text:        "Alert Test",
		Dismissible: true,
		Danger:      true,
	}

	SuccessAlertOpts = AlertOptions{
		Icon:        CheckSVG(),
		Title:       "Alert Title",
		Text:        "Alert Test",
		Dismissible: true,
		Success:     true,
	}
	InfoAlertOpts = AlertOptions{
		Icon:        InfoCircleSVG(),
		Title:       "Alert Title",
		Text:        "Alert Text",
		Dismissible: true,
		Info:        true,
	}

	WarningAlertOpts = AlertOptions{
		Icon:        AlertTriangleSVG(),
		Title:       "Alert Title",
		Text:        "Alert Text",
		Dismissible: true,
		Warning:     true,
	}
)

templ Alert(opt AlertOptions) {
	<div
 		class={
			"alert",
			templ.KV("alert-dismissible", opt.Dismissible),
			templ.KV("alert-success", opt.Success),
			templ.KV("alert-info", opt.Info),
			templ.KV("alert-danger", opt.Danger),
			templ.KV("alert-warning", opt.Warning),
			opt.Classes,
		}
 		role="alert"
	>
		<div class="d-flex">
			if opt.Icon != nil {
				<div class="alert-icon">
					@opt.Icon
				</div>
			}
			<div>
				<h4 class="alert-title">{ opt.Title }</h4>
				<div class="text-secondary">{ opt.Text }</div>
			</div>
			<a class="btn-close" data-bs-dismiss="alert" aria-label="close"></a>
		</div>
	</div>
}

// templ AlertPage(opts LayoutOpts, alerts ...templ.Component) {
// 	@SideBarlayout(opts) {
// 		for _, alert := range alerts {
// 			@alert
// 		}
// 	}
// }
